from flask import Flask, jsonify, request, render_template_string, redirect, url_for

app = Flask(__name__)

# 🧠 Temporary "Database" (in-memory list)
students = [
    {"id": 1, "name": "Michaella Pedotim", "grade": 10, "section": "Zechariah"},
    {"id": 2, "name": "John Doe", "grade": 9, "section": "Gabriel"},
]

# 🏠 HOME — CRUD Dashboard
@app.route('/')
def home():
    html = """
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Student Management | Flask CRUD</title>
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
        <style>
            body {
                background: linear-gradient(135deg, #43cea2, #185a9d);
                color: white;
                font-family: 'Poppins', sans-serif;
            }
            .container {
                margin-top: 60px;
            }
            .card {
                background: rgba(255,255,255,0.1);
                backdrop-filter: blur(10px);
                border: none;
                border-radius: 15px;
                padding: 20px;
                color: white;
                box-shadow: 0 4px 20px rgba(0,0,0,0.3);
            }
            table {
                color: white;
            }
            .btn {
                border-radius: 8px;
            }
            h1 {
                font-weight: bold;
                margin-bottom: 20px;
            }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="card">
                <h1 class="text-center mb-4">🎓 Student Management System</h1>

                <!-- Add Student Form -->
                <form method="POST" action="/add" class="row g-3 mb-4">
                    <div class="col-md-4">
                        <input type="text" class="form-control" name="name" placeholder="Name" required>
                    </div>
                    <div class="col-md-3">
                        <input type="number" class="form-control" name="grade" placeholder="Grade" required>
                    </div>
                    <div class="col-md-3">
                        <input type="text" class="form-control" name="section" placeholder="Section" required>
                    </div>
                    <div class="col-md-2">
                        <button type="submit" class="btn btn-success w-100">Add</button>
                    </div>
                </form>

                <!-- Student Table -->
                <table class="table table-striped table-hover align-middle">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Name</th>
                            <th>Grade</th>
                            <th>Section</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        {% for s in students %}
                        <tr>
                            <td>{{ s.id }}</td>
                            <td>{{ s.name }}</td>
                            <td>{{ s.grade }}</td>
                            <td>{{ s.section }}</td>
                            <td>
                                <a href="/edit/{{ s.id }}" class="btn btn-warning btn-sm">Edit</a>
                                <a href="/delete/{{ s.id }}" class="btn btn-danger btn-sm" onclick="return confirm('Delete this student?')">Delete</a>
                            </td>
                        </tr>
                        {% endfor %}
                    </tbody>
                </table>
                <p class="text-center mt-4">
                    <a href="/students" class="btn btn-light">View JSON Data</a>
                </p>
            </div>
        </div>
    </body>
    </html>
    """
    return render_template_string(html, students=students)

# 🟢 READ — API: Get all students
@app.route('/students', methods=['GET'])
def get_students():
    return jsonify(students)

# 🟢 READ (single student)
@app.route('/students/<int:student_id>', methods=['GET'])
def get_student(student_id):
    student = next((s for s in students if s["id"] == student_id), None)
    if student:
        return jsonify(student)
    return jsonify({"error": "Student not found"}), 404

# 🟡 CREATE — via Web Form
@app.route('/add', methods=['POST'])
def add_student_form():
    name = request.form['name']
    grade = request.form['grade']
    section = request.form['section']
    new_id = max(s["id"] for s in students) + 1 if students else 1
    students.append({"id": new_id, "name": name, "grade": grade, "section": section})
    return redirect(url_for('home'))

# 🟡 CREATE — via API
@app.route('/students', methods=['POST'])
def add_student_api():
    data = request.get_json()
    if not data or not all(k in data for k in ("name", "grade", "section")):
        return jsonify({"error": "Invalid input"}), 400
    new_id = max(s["id"] for s in students) + 1 if students else 1
    new_student = {"id": new_id, **data}
    students.append(new_student)
    return jsonify({"message": "Student added successfully", "student": new_student}), 201

# 🟠 UPDATE — Web + API
@app.route('/edit/<int:student_id>', methods=['GET', 'POST'])
def edit_student(student_id):
    student = next((s for s in students if s["id"] == student_id), None)
    if not student:
        return "<h3>Student not found</h3>", 404

    if request.method == 'POST':
        student["name"] = request.form['name']
        student["grade"] = request.form['grade']
        student["section"] = request.form['section']
        return redirect(url_for('home'))

    html = """
    <!DOCTYPE html>
    <html>
    <head>
        <title>Edit Student</title>
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
        <style>
            body {
                background: linear-gradient(135deg, #8360c3, #2ebf91);
                color: white;
                font-family: 'Poppins', sans-serif;
            }
            .card {
                background-color: rgba(255,255,255,0.15);
                border-radius: 15px;
                padding: 30px;
                margin-top: 100px;
                box-shadow: 0 4px 15px rgba(0,0,0,0.2);
            }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="card">
                <h2>Edit Student Info</h2>
                <form method="POST">
                    <div class="mb-3">
                        <label class="form-label">Name</label>
                        <input type="text" name="name" value="{{ student.name }}" class="form-control" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Grade</label>
                        <input type="number" name="grade" value="{{ student.grade }}" class="form-control" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Section</label>
                        <input type="text" name="section" value="{{ student.section }}" class="form-control" required>
                    </div>
                    <button type="submit" class="btn btn-success">Update</button>
                    <a href="/" class="btn btn-light">Cancel</a>
                </form>
            </div>
        </div>
    </body>
    </html>
    """
    return render_template_string(html, student=student)

# 🔴 DELETE — Web + API
@app.route('/delete/<int:student_id>')
def delete_student(student_id):
    global students
    students = [s for s in students if s["id"] != student_id]
    return redirect(url_for('home'))

@app.route('/students/<int:student_id>', methods=['DELETE'])
def delete_student_api(student_id):
    global students
    student = next((s for s in students if s["id"] == student_id), None)
    if not student:
        return jsonify({"error": "Student not found"}), 404
    students = [s for s in students if s["id"] != student_id]
    return jsonify({"message": "Student deleted successfully"})

# 🧩 Run
if __name__ == '__main__':
    app.run(debug=True)
